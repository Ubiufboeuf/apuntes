---
import Layout from '@/layouts/Layout.astro'
import { Editor as ClientEditor } from '@/components/Editor'
import { getNotaContent, verifyExistNota, verifyExistNotaStrictless } from '@/db/client'
import { CrearNota } from '@/components/CrearNota'
import { getSeccionByMateriaLink, nameToLink } from '@/lib/utils'

export const prerender = false

const { url } = Astro
const materiaName = url.searchParams.get('materiaName') ?? ''
const notaName = url.searchParams.get('notaName') ?? ''

if (url.pathname === '/favicon.ico') return 

const id = `${nameToLink(getSeccionByMateriaLink(nameToLink(materiaName ?? '')) ?? '')}/${nameToLink(materiaName)}/${encodeURIComponent(notaName)}`
const initialContent = await getNotaContent({ id })

Astro.url.searchParams.set('title', `Crea una nueva nota para ${materiaName}`)
Astro.url.searchParams.set('materiaName', materiaName)
const dbHasNota = await verifyExistNotaStrictless({ materiaName, notaName })
if (notaName && dbHasNota) return Astro.redirect(fullPath)
// if (initialContent > 0 || existNota) Astro.url.searchParams.delete('title')
let title = 'Editor'
if (initialContent?.length === 0 || !materiaName || !notaName) {
  title = materiaName ? `Nueva nota - ${materiaName}` : 'Nueva nota'
}
---

<Layout
  title={title}
  className='min-h-fit pb-32'
>
  {
    (initialContent?.length === 0 || !materiaName || !notaName) ? (
      <CrearNota _materiaName={materiaName ?? ''} _notaName={notaName ?? ''} client:load />
    ) : (
      <ClientEditor
        initialContent={initialContent}
        materiaName={materiaName}
        notaName={notaName}
        client:only='react'
      />
    ) 
  }
</Layout>