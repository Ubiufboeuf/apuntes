---
import { verifyExistNota, verifyExistNotaStrictless } from '@/db/client'
import LayoutMaterias from '@/layouts/LayoutMaterias.astro'
import LayoutNotas from '@/layouts/LayoutNotas.astro'
import LayoutSeccionDeMaterias from '@/layouts/LayoutSeccionDeMaterias.astro'
import { materiasPorSeccion, nameToLink, getMateriaByLink, getSeccionByMateriaLink } from '@/lib/utils'

export const prerender = false

let { slug } = Astro.params

if (!slug) return Astro.redirect('/')
let type, seccion, materia, dbHasNota = false

const link = slug.split('/')

if (link.length === 1) {
  type = 'seccion'
  seccion = materiasPorSeccion.find(m => nameToLink(m.title) === slug)
} else if (link.length === 2) {
  type = 'materia'
  materia = getMateriaByLink(link[1])
} else if (link.length === 3) {
  type = 'nota'
  const partsCurrentId = slug.split('/')
  console.log(partsCurrentId)
  const materiaName = getMateriaByLink(partsCurrentId[1]) || ''
  const materiaLink = nameToLink(materiaName)
  const notaName = partsCurrentId[2]
  try {
    dbHasNota = await verifyExistNotaStrictless({ materiaName, notaName })
  } catch {
    console.error('Error al comprobar si existe la nota .')
  }
}
---

{
  (type === 'seccion' && seccion)
    ? <LayoutSeccionDeMaterias />
    : (type === 'materia' && materia)
      ? <LayoutMaterias />
      : (type === 'nota')
        ? <LayoutNotas />
        : <script is:inline>window.location.href = '/404'</script>
}